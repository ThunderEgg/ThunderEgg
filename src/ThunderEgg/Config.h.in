/***************************************************************************
 *  ThunderEgg, a library for solvers on adaptively refined block-structured
 *  Cartesian grids.
 *
 *  Copyright (c) 2021      Scott Aiton
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 ***************************************************************************/
#ifndef THUNDEREGG_CONFIG_H
#define THUNDEREGG_CONFIG_H

#cmakedefine THUNDEREGG_FFTW_ENABLED
#cmakedefine THUNDEREGG_P4EST_ENABLED
#cmakedefine THUNDEREGG_LAPACK_ENABLED
#cmakedefine THUNDEREGG_PETSC_ENABLED
#cmakedefine THUNDEREGG_ENABLE_DEBUG

namespace ThunderEgg {

#ifdef THUNDEREGG_FFTW_ENABLED
constexpr bool FFTW_ENABLED = true;
#else
constexpr bool FFTW_ENABLED = false;
#endif

#ifdef THUNDEREGG_P4EST_ENABLED
constexpr bool P4EST_ENABLED = true;
#else
constexpr bool P4EST_ENABLED = false;
#endif

#ifdef THUNDEREGG_LAPACK_ENABLED
constexpr bool LAPACK_ENABLED = true;
#else
constexpr bool LAPACK_ENABLED = false;
#endif

#ifdef THUNDEREGG_PETSC_ENABLED
constexpr bool PETSC_ENABLED = true;
#else
constexpr bool PETSC_ENABLED = false;
#endif

#ifdef THUNDEREGG_ENABLE_DEBUG
constexpr bool ENABLE_DEBUG = true;
#else
constexpr bool ENABLE_DEBUG = false;
#endif

template<int D>
constexpr bool is_supported_dimension = (D == 2 || D == 3);

template<int D, int M>
constexpr bool is_valid_face = is_supported_dimension<D> && (M >= 0) && (M < D);

} // namespace ThunderEgg
#endif