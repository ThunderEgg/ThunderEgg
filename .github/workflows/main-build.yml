name: Main ThunderEgg Build / Test / Analyze
on: 
  push:
    paths-ignore:
      - '.github/workflows/doxygen.yml'
jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        include:
        - name: "gcc"
          preset: "ci-gcc"
          ubuntu_packages: "libfftw3-dev libopenmpi-dev openmpi-bin libpetsc-real3.12-dbg libblas-dev liblapack-dev"
          analyze: false
        - name: "clang"
          preset: "ci-clang"
          ubuntu_packages: "libfftw3-dev libopenmpi-dev openmpi-bin libpetsc-real3.12-dbg libblas-dev liblapack-dev llvm-11"
          analyze: true

    name: ${{ matrix.name }} Build on Linux
    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install ${{ matrix.ubuntu_packages }} ninja-build ccache
        
    - name: Prepare cache timestamp
      id: cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")

    - name: ccache cache files
      uses: actions/cache@v3
      with:
        path: ~/.ccache
        key: ${{ matrix.name }}-ccache-${{ steps.cache_timestamp.outputs.timestamp }}
        restore-keys: |
          ${{ matrix.name }}-ccache-

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure
      run: cmake --preset ${{ matrix.preset }}

    - name: Build
      run: cmake --build --preset ${{ matrix.preset }} -parallel 2

    - name: Run Tests
      run: ctest -j2 --preset ${{ matrix.preset }}

    - name: Generate Coverage Report
      if: ${{ matrix.analyze }}
      run: |
        llvm-profdata-11 merge \
          -sparse out/test/${{ matrix.preset }}/test.profraw.* \
          -o test.profdata
        llvm-cov-11 show \
          --instr-profile=test.profdata \
          -object out/build/${{ matrix.preset }}/test/unit_tests_mpi1 \
          -object out/build/${{ matrix.preset }}/test/unit_tests_mpi2 \
          -object out/build/${{ matrix.preset }}/test/unit_tests_mpi3 \
          --ignore-filename-regex="((test|out|tpl)/.*)" \
          > coverage.txt

    - name: Upload to codecov.io
      if: ${{ matrix.analyze }}
      run: bash <(curl -s https://codecov.io/bash)